name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GODOT_VERSION: 3.2.2

jobs:
  # Checks MDFramework changes with an empty project to make sure it compiles
  empty-check:
    name: Empty Project Check
    runs-on: ubuntu-20.04

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0
    
    - name: Setup Godot
      run: |
        cd ..
        wget -O godot.zip https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/mono/Godot_v${GODOT_VERSION}-stable_mono_linux_headless_64.zip
        sudo apt install unzip
        unzip godot.zip
    
    - name: Clone Examples
      run: |
        cd ..
        git clone https://github.com/DoubleDeez/MDFramework-Examples.git Examples
        cp -R MDFramework/* Examples/MDFramework
        mkdir -p Examples/.mono/assemblies/Debug
        mkdir -p Examples/.mono/assemblies/Release
        cp -R Godot_v${GODOT_VERSION}-stable_mono_linux_headless_64/GodotSharp/Api/Debug/* Examples/.mono/assemblies/Debug
        cp -R Godot_v${GODOT_VERSION}-stable_mono_linux_headless_64/GodotSharp/Api/Release/* Examples/.mono/assemblies/Release
        cd Examples
        git checkout empty
        
    - name: Build Examples
      run: |
        cd ../Examples
        export DOTNET_CLI_TELEMETRY_OPTOUT="true"
        dotnet build -c=Debug
        dotnet build -c=ExportRelease

  # Checks MDFramework changes against our example projects to check if there's any backwards compatibility issues.
  backwards-check:
    name: Backwards Compatibility Check
    runs-on: ubuntu-20.04

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0
    
    - name: Setup Godot
      run: |
        cd ..
        wget -O godot.zip https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}/mono/Godot_v${GODOT_VERSION}-stable_mono_linux_headless_64.zip
        sudo apt install unzip
        unzip godot.zip
    
    - name: Clone Examples
      run: |
        cd ..
        git clone https://github.com/DoubleDeez/MDFramework-Examples.git Examples
        cp -R MDFramework/* Examples/MDFramework
        mkdir -p Examples/.mono/assemblies/Debug
        mkdir -p Examples/.mono/assemblies/Release
        cp -R Godot_v${GODOT_VERSION}-stable_mono_linux_headless_64/GodotSharp/Api/Debug/* Examples/.mono/assemblies/Debug
        cp -R Godot_v${GODOT_VERSION}-stable_mono_linux_headless_64/GodotSharp/Api/Release/* Examples/.mono/assemblies/Release
        
    - name: Build Examples
      run: |
        cd ../Examples
        export DOTNET_CLI_TELEMETRY_OPTOUT="true"
        dotnet build -c=Debug
        dotnet build -c=ExportRelease
